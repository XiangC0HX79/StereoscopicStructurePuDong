<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="777" height="649">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[		
			import app.model.vo.ImportExportVO;
			import app.model.vo.LayerVO;
			import app.model.vo.PassageVO;
			import app.model.vo.VideoVO;
			
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayCollection;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.managers.CursorManager;
			import mx.managers.DragManager;
			
			import spark.events.IndexChangeEvent;
			
			public static const LIST_CHANGING:String 	= "ListChanging";
			
			public static const IMAGE_READY:String 	= "ImageReady";
			
			public static const ROLLOVER:String 	= "RollOver";
			public static const ROLLOUT:String 		= "RollOut";
			public static const MOUSECLICK:String 	= "MouseClick";
			
			[Bindable]private var dp:ArrayCollection;
			public function set Datapro(value:ArrayCollection):void
			{
				dp = value;
				
				if(dp.length > 0)
					psg = dp[0];
			}
			
			[Bindable]public var psg:PassageVO;
			
			private function adjustPosition():void
			{			
				var w:Number = imagePassage.sourceWidth * groupPassage.scaleX;
				if(w < scrollPassage.width)
					groupPassage.x = (scrollPassage.width - w) / 2;
				else
					groupPassage.x = 0;
				
				var h:Number = imagePassage.sourceHeight * groupPassage.scaleY;
				if(h < scrollPassage.height)
					groupPassage.y = (scrollPassage.height - h) / 2;
				else
					groupPassage.y = 0;
			}
			
			private function zoomin():void
			{
				var s:Number = Math.floor(groupPassage.scaleX*10) / 10;
				groupPassage.scaleX = s + 0.1;
				groupPassage.scaleY = s + 0.1;
				
				adjustPosition();
			}
			
			private function zoomout():void
			{
				var s:Number = Math.floor(groupPassage.scaleX*10) / 10;
				groupPassage.scaleX = s - 0.1;
				groupPassage.scaleY = s - 0.1;
				
				adjustPosition();
			}
			
			protected function sizeToTrue():void
			{
				groupPassage.scaleX = 1;
				groupPassage.scaleY = 1;
				
				adjustPosition();
			}
			
			protected function sizeToContain():void
			{
				var s:Number = Math.min(scrollPassage.width / imagePassage.sourceWidth,scrollPassage.height / imagePassage.sourceHeight);
				
				groupPassage.scaleX = s;
				groupPassage.scaleY = s;
				
				adjustPosition();
			}
						
			protected function imagePassage_readyHandler(event:FlexEvent):void
			{
				sizeToContain();
				
				dispatchEvent(new Event(IMAGE_READY));
			}
			
			protected function groupPassage_dragEnterHandler(e:DragEvent):void
			{	
				if(
					e.dragSource.hasFormat("VideoVO")	
					|| e.dragSource.hasFormat("ImportExportVO")	
				)
				{  
					DragManager.acceptDragDrop(groupPassage);	
				}  
			}
			
			protected function groupPassage_dragDropHandler(e:DragEvent):void
			{
				var sp:Point = e.dragSource.dataForFormat("StartPoint") as Point;
				
				if(e.dragSource.hasFormat("VideoVO"))
				{  
					var v:VideoVO = e.dragSource.dataForFormat("VideoVO") as VideoVO;
					v.T_VideoX = e.localX - sp.x + e.dragInitiator.width / 2;
					v.T_VideoY = e.localY - sp.y + e.dragInitiator.height / 2;
				}
				else if(e.dragSource.hasFormat("ImportExportVO"))
				{  
					var ie:ImportExportVO = e.dragSource.dataForFormat("ImportExportVO") as ImportExportVO;
					ie.T_ImportExportX = e.localX - sp.x;
					ie.T_ImportExportY = e.localY - sp.y;
				}
			}		
		]]>
	</fx:Script>
	
	<fx:Binding source="list.selectedItem" destination="psg" twoWay="true"/>
	<fx:Binding source="groupVideo.visible" destination="LayerVO.VIDEO.LayerVisible" twoWay="true"/>
	<fx:Binding source="toggleButtonVideo.selected" destination="LayerVO.VIDEO.LayerVisible" twoWay="true"/>
	
	<s:Rect left="0" right="0" top="0" bottom="0">
		<s:fill>
			<s:BitmapFill id="bgFill" source="@Embed('assets/image/弹出平面图背景.png')" fillMode="scale"/>
		</s:fill>
	</s:Rect>
	
	<s:List id="list" left="22" top="15" bottom="23" width="100" borderVisible="false" 
			dataProvider="{dp}"
			labelField="T_PassageName"/>
	
	<s:Rect left="130" right="22" top="15" bottom="23">
		<s:fill>
			<s:SolidColor color="white"/>
		</s:fill>
	</s:Rect>
	
	<s:Scroller id="scrollPassage" left="130" right="22" top="15" bottom="23">	
		<s:Group minWidth="625" minHeight="611">			
			<s:Group id="groupPassage" 
					 dragEnter="groupPassage_dragEnterHandler(event)" 
					 dragDrop="groupPassage_dragDropHandler(event)" 
					 rollOut="dispatchEvent(new Event(ROLLOUT))" 
					 rollOver="dispatchEvent(new Event(ROLLOVER))" 
					 click="dispatchEvent(new Event(MOUSECLICK))">
				<s:Image id="imagePassage"
						 ready="imagePassage_readyHandler(event)" source="{psg.T_PassagePicPath}"/>
				<s:Group id="groupVideo"/>
				<s:Group id="groupImportExport"/>
			</s:Group>
		</s:Group>
	</s:Scroller>
	
	<s:VGroup y="20" right="40">
		<s:Image buttonMode="true" source="@Embed('assets/image/实际大小.png')" click="sizeToContain();"/>
		<s:Image buttonMode="true" source="@Embed('assets/image/1比1.png')" click="sizeToTrue();"/>
		<s:Image buttonMode="true" source="@Embed('assets/image/放大.png')" click="zoomin();"/>
		<s:Image buttonMode="true" source="@Embed('assets/image/缩小.png')" click="zoomout();"/>		
		<s:ToggleButton id="toggleButtonVideo" buttonMode="true" skinClass="app.skin.SkinToggleButtonVideo" width="50" height="50"/>
	</s:VGroup>
</s:Group>
